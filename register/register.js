document.addEventListener('DOMContentLoaded', function() {
  // Kh·ªüi t·∫°o CAPTCHA
  generateCaptcha();
  
  // Th√™m event listener cho form
  document.getElementById('registerForm').addEventListener('submit', function(e) {
    e.preventDefault();
    register();
  });
  
  // Event listener cho n√∫t refresh CAPTCHA
  document.getElementById('refreshCaptcha').addEventListener('click', generateCaptcha);
  
  // Event listeners cho real-time validation
  document.getElementById('username').addEventListener('blur', validateUsername);
  document.getElementById('email').addEventListener('blur', validateEmail);
  document.getElementById('password').addEventListener('blur', validatePassword);
  document.getElementById('confirm').addEventListener('blur', validateConfirmPassword);
  document.getElementById('captchaInput').addEventListener('blur', validateCaptcha);
});

// H√†m t·∫°o CAPTCHA
function generateCaptcha() {
  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  let captcha = '';
  for (let i = 0; i < 6; i++) {
    captcha += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  document.getElementById('captcha').textContent = captcha;
  
  // Th√™m hi·ªáu ·ª©ng xoay cho n√∫t refresh
  const refreshBtn = document.getElementById('refreshCaptcha');
  refreshBtn.classList.add('loading');
  setTimeout(() => {
    refreshBtn.classList.remove('loading');
  }, 500);
}

// H√†m validate username
function validateUsername() {
  const username = document.getElementById('username').value.trim();
  const errorElement = document.getElementById('usernameError');
  const inputElement = document.getElementById('username');
  
  if (!username) {
    showError(errorElement, inputElement, 'Vui l√≤ng nh·∫≠p t√™n ƒëƒÉng nh·∫≠p');
    return false;
  }
  
  if (username.length < 3) {
    showError(errorElement, inputElement, 'T√™n ƒëƒÉng nh·∫≠p ph·∫£i c√≥ √≠t nh·∫•t 3 k√Ω t·ª±');
    return false;
  }
  
  if (!/^[a-zA-Z0-9_]+$/.test(username)) {
    showError(errorElement, inputElement, 'T√™n ƒëƒÉng nh·∫≠p ch·ªâ ƒë∆∞·ª£c ch·ª©a ch·ªØ c√°i, s·ªë v√† d·∫•u g·∫°ch d∆∞·ªõi');
    return false;
  }
  
  clearError(errorElement, inputElement);
  return true;
}

// H√†m validate email
function validateEmail() {
  const email = document.getElementById('email').value.trim();
  const errorElement = document.getElementById('emailError');
  const inputElement = document.getElementById('email');
  
  if (!email) {
    showError(errorElement, inputElement, 'Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ email');
    return false;
  }
  
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(email)) {
    showError(errorElement, inputElement, 'ƒê·ªãa ch·ªâ email kh√¥ng h·ª£p l·ªá');
    return false;
  }
  
  clearError(errorElement, inputElement);
  return true;
}

// H√†m validate password
function validatePassword() {
  const password = document.getElementById('password').value;
  const errorElement = document.getElementById('passwordError');
  const inputElement = document.getElementById('password');
  
  if (!password) {
    showError(errorElement, inputElement, 'Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u');
    return false;
  }
  
  if (password.length < 6) {
    showError(errorElement, inputElement, 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±');
    return false;
  }
  
  if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(password)) {
    showError(errorElement, inputElement, 'M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t m·ªôt ch·ªØ hoa, m·ªôt ch·ªØ th∆∞·ªùng v√† m·ªôt s·ªë');
    return false;
  }
  
  clearError(errorElement, inputElement);
  return true;
}

// H√†m validate confirm password
function validateConfirmPassword() {
  const password = document.getElementById('password').value;
  const confirm = document.getElementById('confirm').value;
  const errorElement = document.getElementById('confirmError');
  const inputElement = document.getElementById('confirm');
  
  if (!confirm) {
    showError(errorElement, inputElement, 'Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u');
    return false;
  }
  
  if (password !== confirm) {
    showError(errorElement, inputElement, 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp');
    return false;
  }
  
  clearError(errorElement, inputElement);
  return true;
}

// H√†m validate CAPTCHA
function validateCaptcha() {
  const captchaInput = document.getElementById('captchaInput').value.trim();
  const actualCaptcha = document.getElementById('captcha').textContent;
  const errorElement = document.getElementById('captchaError');
  const inputElement = document.getElementById('captchaInput');
  
  if (!captchaInput) {
    showError(errorElement, inputElement, 'Vui l√≤ng nh·∫≠p m√£ x√°c th·ª±c');
    return false;
  }
  
  if (captchaInput !== actualCaptcha) {
    showError(errorElement, inputElement, 'M√£ x√°c th·ª±c kh√¥ng ch√≠nh x√°c');
    return false;
  }
  
  clearError(errorElement, inputElement);
  return true;
}

// H√†m hi·ªÉn th·ªã l·ªói
function showError(errorElement, inputElement, message) {
  errorElement.innerHTML = `<i class="fas fa-exclamation-circle"></i> ${message}`;
  inputElement.classList.add('error');
}

// H√†m x√≥a l·ªói
function clearError(errorElement, inputElement) {
  errorElement.textContent = '';
  inputElement.classList.remove('error');
}

// H√†m ƒëƒÉng k√Ω ch√≠nh
function register() {
  // Validate t·∫•t c·∫£ c√°c tr∆∞·ªùng
  const isUsernameValid = validateUsername();
  const isEmailValid = validateEmail();
  const isPasswordValid = validatePassword();
  const isConfirmValid = validateConfirmPassword();
  const isCaptchaValid = validateCaptcha();
  
  if (isUsernameValid && isEmailValid && isPasswordValid && isConfirmValid && isCaptchaValid) {
    // Hi·ªÉn th·ªã loading
    const registerBtn = document.querySelector('.register-btn');
    const originalText = registerBtn.innerHTML;
    registerBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> ƒêang x·ª≠ l√Ω...';
    registerBtn.disabled = true;
    
    // Gi·∫£ l·∫≠p g·ª≠i d·ªØ li·ªáu
    setTimeout(() => {
      // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
      alert('üéâ ƒêƒÉng k√Ω th√†nh c√¥ng! Vui l√≤ng ki·ªÉm tra email ƒë·ªÉ x√°c th·ª±c t√†i kho·∫£n.');
      
      // Reset form
      document.getElementById('registerForm').reset();
      generateCaptcha();
      clearAllErrors();
      
      // Kh√¥i ph·ª•c n√∫t ƒëƒÉng k√Ω
      registerBtn.innerHTML = originalText;
      registerBtn.disabled = false;
      
      // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng nh·∫≠p sau 2 gi√¢y
      setTimeout(() => {
        window.location.href = '../login/login.html';
      }, 2000);
      
    }, 2000);
  } else {
    // Cu·ªôn ƒë·∫øn tr∆∞·ªùng ƒë·∫ßu ti√™n b·ªã l·ªói
    const firstError = document.querySelector('.error');
    if (firstError) {
      firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
      firstError.focus();
    }
  }
}

// H√†m x√≥a t·∫•t c·∫£ l·ªói
function clearAllErrors() {
  const errorElements = document.querySelectorAll('.error-message');
  const inputElements = document.querySelectorAll('input');
  
  errorElements.forEach(element => {
    element.textContent = '';
  });
  
  inputElements.forEach(element => {
    element.classList.remove('error');
  });
}